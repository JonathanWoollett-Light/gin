PS C:\Users\Jonathan\Documents\gin> poetry run pytest -s
====================================================================================================================================================== test session starts =======================================================================================================================================================
platform win32 -- Python 3.13.4, pytest-8.4.1, pluggy-1.6.0
rootdir: C:\Users\Jonathan\Documents\gin
configfile: pyproject.toml
plugins: hypothesis-6.135.4
collected 1 item                                                                                                                                                                                                                                                                                                                  

tests\test_nmnist.py Getting NMNIST
Files: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 6/6 [00:00<00:00,  6.27file/s]
Bytes: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1.10G/1.10G [00:00<00:00, 1.23GB/s] 
Files: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 10010/10010 [00:00<00:00, 13446.55file/s]
Bytes: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 200M/200M [00:00<00:00, 282MB/s] 
Files: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 60010/60010 [00:04<00:00, 13381.45file/s]
Bytes: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1.17G/1.17G [00:04<00:00, 279MB/s] 
Getting frames
Framing:   0%|                                                                                                                                                                                                                                                                                          | 0/10000 [00:00<?, ?it/s]
F

============================================================================================================================================================ FAILURES ============================================================================================================================================================ 
__________________________________________________________________________________________________________________________________________________________ test_nmnist ___________________________________________________________________________________________________________________________________________________________ 

    def test_nmnist():
        print("Getting NMNIST")
        x = nmnist()

        print("Getting frames")
>       _ = x.frames()
            ^^^^^^^^^^

tests\test_nmnist.py:12:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _  
src\gin\nmnist.py:147: in frames
    test = to_frames(self.test, track)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
src\gin\nmnist.py:108: in to_frames
    event = to_event(value[i:i+5])
            ^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _  

data = b'!\x16\x80\x1b8'

    def to_event(data: bytes) -> Event:
        """Parses 40-bit event data into structured components.

        Args:
            data: 5-byte input (40 bits) containing:
                bits 39-32: Xaddress (8 bits)
                bits 31-24: Yaddress (8 bits)
                bit 23:     Polarity (1 bit)
                bits 22-0:  Timestamp (23 bits)

        Returns:
            tuple[int, int, bool, int]: (Xaddress, Yaddress, Polarity, Timestamp)
        """
        # Assert is 5 bytes (40 bits).
        assert len(data) == 5

        # Convert bytes to integer (big-endian)
        value = int.from_bytes(data, byteorder="big")

        # Extract components using bitwise operations
        x = (value >> 32) & 0xFF  # Shift 32 bits right, mask 8 bits
        y = (value >> 24) & 0xFF  # Shift 24 bits right, mask 8 bits
>       assert 0 < x <= 28 and 0 < y <= 28, f"x: {x}, y: {y}, value: {value}, data: {data}, all 8 bit samples: {[value >> i & 0xFF for i in range(0,40,8)]}"
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AssertionError: x: 33, y: 22, value: 142111415096, data: b'!\x16\x80\x1b8', all 8 bit samples: [56, 27, 128, 22, 33]

src\gin\nmnist.py:71: AssertionError
==================================================================================================================================================== short test summary info =====================================================================================================================================================
FAILED tests/test_nmnist.py::test_nmnist - AssertionError: x: 33, y: 22, value: 142111415096, data: b'!\x16\x80\x1b8', all 8 bit samples: [56, 27, 128, 22, 33]
======================================================================================================================================================= 1 failed in 7.25s ======================================================================================================================================================== 
PS C:\Users\Jonathan\Documents\gin> 